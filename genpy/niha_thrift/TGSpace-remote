#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from niha_thrift import TGSpace
from niha_thrift.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  i32 GetFrequency()')
    print('  i32 GetFrequencyByUser(TUser user)')
    print('  TESiginStatus SignIn(TUser user, string Password)')
    print('  TESiginStatus SignOut(TUser user)')
    print('  void Ping()')
    print('  string CreateGraph(TGraph graph)')
    print('  bool UpdateGraph(TGraph graph)')
    print('  bool DeleteGraph(string criteria)')
    print('   RetrieveGraphs(string query)')
    print('  TGraph RetrieveGraphByGraphID(string graphid, i32 limit)')
    print('   RetrieveGraphsByAoKID(string id, i32 limit)')
    print('   RetrieveGraphsByAllSubjectSpecializationOf(string criteria, i32 limit)')
    print('   RetrieveGraphsByAnySubjectSpecializationOf(string criteria, i32 limit)')
    print('   RetrieveGraphsByAllNameLabels( criteria, i32 limit)')
    print('   RetrieveGraphsByAnyNameLabels( criteria, i32 limit)')
    print('   RetrieveGraphsByTypes( types, i32 limit)')
    print('   RetrieveGraphsByTypeAndName(string type, string name, i32 limit)')
    print('   GetGraphByTypeAndSpecialization(string type, string specialization_criteria, i32 limit)')
    print('   RetrieveGraphsCreatedByNiHA(i32 limit)')
    print('   RetrieveGraphsCreatedByNiHAWithUser(string when_this_user_was_signedin, i32 limit)')
    print('   RetrieveGraphsCreatedByNiHAWithCriteria(string criteria, i32 limit)')
    print('   RetriveGraphsUniqueListOfAllSubjectSpecializationLabels(i32 limit)')
    print('   CreateRelation(TRelation relations)')
    print('  string CreateRelationWithNodes(TNode source_node, TNode target_node)')
    print('  bool UpdateRelation(TRelation relation)')
    print('  bool DeleteRelation(string criteria)')
    print('  TRelation RetrieveRelationByNeo4jId(string id, i32 limit)')
    print('   RetrieveRelations(string criteria, i32 limit)')
    print('   RetrieveRelationsByGraphID(string graphid, i32 limit)')
    print('   RetrieveRelationsByAoKID(string id, i32 limit)')
    print('   RetrieveRelationsBySpecializationOf(string subject_specialization, i32 limit)')
    print('   RetrieveRelationsNameLabels(string criteria, i32 limit)')
    print('   RetrieveRelationsTruthValue(string criteria, i32 limit)')
    print('   RetrieveRelationsByDateTime(string criteria, i32 limit)')
    print('   RetrieveRelationsByAge(string criteria, i32 limit)')
    print('   RetrieveRelationsAttentionLevel(string criteria, i32 limit)')
    print('   RetrieveRelationsScratchPad(string criteria, i32 limit)')
    print('   RetrieveRelationsByUser(string userid, i32 limit)')
    print('   RetrieveRelationsCreateByUser(string userid, i32 limit)')
    print('   RetrieveRelationsCreatedByNiHA(i32 limit)')
    print('   RetrieveRelationsCreatedByNiHAWithUser(string when_this_user_was_signedin, i32 limit)')
    print('   RetrieveRelationsCreatedByNiHAWithCriteria(string criteria, i32 limit)')
    print('   RetrieveRelationsUniqueListOfAllSpecializationLabels(i32 limit)')
    print('  string CreateNodes(TNode node)')
    print('  TNode RetrieveByNeo4jId(string id)')
    print('   RetrieveNodes(string query)')
    print('   RetrieveNodesByGraphID(string graphid, i32 limit)')
    print('   RetrieveNodesByAoKID(string id, i32 limit)')
    print('   RetrieveNodesByAllSubjectSpecializationOf(string criteria, i32 limit)')
    print('   RetrieveNodesByAnySubjectSpecializationOf(string criteria, i32 limit)')
    print('   RetrieveNodesByAnyNameLabels(string criteria, i32 limit)')
    print('   RetrieveNodesByAllNameLabels(string criteria, i32 limit)')
    print('   RetrieveNodesTruthValue(string criteria, i32 limit)')
    print('   RetrieveNodesByEvaluation(string criteria, i32 limit)')
    print('   RetrieveNodesByDateTime(string criteria, i32 limit)')
    print('   RetrieveNodesByAge(string criteria, i32 limit)')
    print('   RetrieveNodesAttentionLevel(string criteria, i32 limit)')
    print('   RetrieveNodesByScratchPad(string criteria, i32 limit)')
    print('   RetrieveNodesByUser(string userid, i32 limit)')
    print('   RetrieveNodesCreateByUser(string userid, i32 limit)')
    print('   RetrieveNodesCreatedByNiHA(i32 limit)')
    print('   RetrieveNodesCreatedByNiHAWithUser(string when_this_user_was_signedin, i32 limit)')
    print('   RetrieveNodesCreatedByNiHAWithCriteria(string criteria, i32 limit)')
    print('   RetriveNodesUniqueListOfAllSpecializationLabels(i32 limit)')
    print('  bool UpdateNode(TNode node)')
    print('  bool DeleteNode(string criteria)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = TGSpace.Client(protocol)
transport.open()

if cmd == 'GetFrequency':
    if len(args) != 0:
        print('GetFrequency requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetFrequency())

elif cmd == 'GetFrequencyByUser':
    if len(args) != 1:
        print('GetFrequencyByUser requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetFrequencyByUser(eval(args[0]),))

elif cmd == 'SignIn':
    if len(args) != 2:
        print('SignIn requires 2 args')
        sys.exit(1)
    pp.pprint(client.SignIn(eval(args[0]), args[1],))

elif cmd == 'SignOut':
    if len(args) != 1:
        print('SignOut requires 1 args')
        sys.exit(1)
    pp.pprint(client.SignOut(eval(args[0]),))

elif cmd == 'Ping':
    if len(args) != 0:
        print('Ping requires 0 args')
        sys.exit(1)
    pp.pprint(client.Ping())

elif cmd == 'CreateGraph':
    if len(args) != 1:
        print('CreateGraph requires 1 args')
        sys.exit(1)
    pp.pprint(client.CreateGraph(eval(args[0]),))

elif cmd == 'UpdateGraph':
    if len(args) != 1:
        print('UpdateGraph requires 1 args')
        sys.exit(1)
    pp.pprint(client.UpdateGraph(eval(args[0]),))

elif cmd == 'DeleteGraph':
    if len(args) != 1:
        print('DeleteGraph requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteGraph(args[0],))

elif cmd == 'RetrieveGraphs':
    if len(args) != 1:
        print('RetrieveGraphs requires 1 args')
        sys.exit(1)
    pp.pprint(client.RetrieveGraphs(args[0],))

elif cmd == 'RetrieveGraphByGraphID':
    if len(args) != 2:
        print('RetrieveGraphByGraphID requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveGraphByGraphID(args[0], eval(args[1]),))

elif cmd == 'RetrieveGraphsByAoKID':
    if len(args) != 2:
        print('RetrieveGraphsByAoKID requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveGraphsByAoKID(args[0], eval(args[1]),))

elif cmd == 'RetrieveGraphsByAllSubjectSpecializationOf':
    if len(args) != 2:
        print('RetrieveGraphsByAllSubjectSpecializationOf requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveGraphsByAllSubjectSpecializationOf(args[0], eval(args[1]),))

elif cmd == 'RetrieveGraphsByAnySubjectSpecializationOf':
    if len(args) != 2:
        print('RetrieveGraphsByAnySubjectSpecializationOf requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveGraphsByAnySubjectSpecializationOf(args[0], eval(args[1]),))

elif cmd == 'RetrieveGraphsByAllNameLabels':
    if len(args) != 2:
        print('RetrieveGraphsByAllNameLabels requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveGraphsByAllNameLabels(eval(args[0]), eval(args[1]),))

elif cmd == 'RetrieveGraphsByAnyNameLabels':
    if len(args) != 2:
        print('RetrieveGraphsByAnyNameLabels requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveGraphsByAnyNameLabels(eval(args[0]), eval(args[1]),))

elif cmd == 'RetrieveGraphsByTypes':
    if len(args) != 2:
        print('RetrieveGraphsByTypes requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveGraphsByTypes(eval(args[0]), eval(args[1]),))

elif cmd == 'RetrieveGraphsByTypeAndName':
    if len(args) != 3:
        print('RetrieveGraphsByTypeAndName requires 3 args')
        sys.exit(1)
    pp.pprint(client.RetrieveGraphsByTypeAndName(args[0], args[1], eval(args[2]),))

elif cmd == 'GetGraphByTypeAndSpecialization':
    if len(args) != 3:
        print('GetGraphByTypeAndSpecialization requires 3 args')
        sys.exit(1)
    pp.pprint(client.GetGraphByTypeAndSpecialization(args[0], args[1], eval(args[2]),))

elif cmd == 'RetrieveGraphsCreatedByNiHA':
    if len(args) != 1:
        print('RetrieveGraphsCreatedByNiHA requires 1 args')
        sys.exit(1)
    pp.pprint(client.RetrieveGraphsCreatedByNiHA(eval(args[0]),))

elif cmd == 'RetrieveGraphsCreatedByNiHAWithUser':
    if len(args) != 2:
        print('RetrieveGraphsCreatedByNiHAWithUser requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveGraphsCreatedByNiHAWithUser(args[0], eval(args[1]),))

elif cmd == 'RetrieveGraphsCreatedByNiHAWithCriteria':
    if len(args) != 2:
        print('RetrieveGraphsCreatedByNiHAWithCriteria requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveGraphsCreatedByNiHAWithCriteria(args[0], eval(args[1]),))

elif cmd == 'RetriveGraphsUniqueListOfAllSubjectSpecializationLabels':
    if len(args) != 1:
        print('RetriveGraphsUniqueListOfAllSubjectSpecializationLabels requires 1 args')
        sys.exit(1)
    pp.pprint(client.RetriveGraphsUniqueListOfAllSubjectSpecializationLabels(eval(args[0]),))

elif cmd == 'CreateRelation':
    if len(args) != 1:
        print('CreateRelation requires 1 args')
        sys.exit(1)
    pp.pprint(client.CreateRelation(eval(args[0]),))

elif cmd == 'CreateRelationWithNodes':
    if len(args) != 2:
        print('CreateRelationWithNodes requires 2 args')
        sys.exit(1)
    pp.pprint(client.CreateRelationWithNodes(eval(args[0]), eval(args[1]),))

elif cmd == 'UpdateRelation':
    if len(args) != 1:
        print('UpdateRelation requires 1 args')
        sys.exit(1)
    pp.pprint(client.UpdateRelation(eval(args[0]),))

elif cmd == 'DeleteRelation':
    if len(args) != 1:
        print('DeleteRelation requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteRelation(args[0],))

elif cmd == 'RetrieveRelationByNeo4jId':
    if len(args) != 2:
        print('RetrieveRelationByNeo4jId requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationByNeo4jId(args[0], eval(args[1]),))

elif cmd == 'RetrieveRelations':
    if len(args) != 2:
        print('RetrieveRelations requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelations(args[0], eval(args[1]),))

elif cmd == 'RetrieveRelationsByGraphID':
    if len(args) != 2:
        print('RetrieveRelationsByGraphID requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationsByGraphID(args[0], eval(args[1]),))

elif cmd == 'RetrieveRelationsByAoKID':
    if len(args) != 2:
        print('RetrieveRelationsByAoKID requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationsByAoKID(args[0], eval(args[1]),))

elif cmd == 'RetrieveRelationsBySpecializationOf':
    if len(args) != 2:
        print('RetrieveRelationsBySpecializationOf requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationsBySpecializationOf(args[0], eval(args[1]),))

elif cmd == 'RetrieveRelationsNameLabels':
    if len(args) != 2:
        print('RetrieveRelationsNameLabels requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationsNameLabels(args[0], eval(args[1]),))

elif cmd == 'RetrieveRelationsTruthValue':
    if len(args) != 2:
        print('RetrieveRelationsTruthValue requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationsTruthValue(args[0], eval(args[1]),))

elif cmd == 'RetrieveRelationsByDateTime':
    if len(args) != 2:
        print('RetrieveRelationsByDateTime requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationsByDateTime(args[0], eval(args[1]),))

elif cmd == 'RetrieveRelationsByAge':
    if len(args) != 2:
        print('RetrieveRelationsByAge requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationsByAge(args[0], eval(args[1]),))

elif cmd == 'RetrieveRelationsAttentionLevel':
    if len(args) != 2:
        print('RetrieveRelationsAttentionLevel requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationsAttentionLevel(args[0], eval(args[1]),))

elif cmd == 'RetrieveRelationsScratchPad':
    if len(args) != 2:
        print('RetrieveRelationsScratchPad requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationsScratchPad(args[0], eval(args[1]),))

elif cmd == 'RetrieveRelationsByUser':
    if len(args) != 2:
        print('RetrieveRelationsByUser requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationsByUser(args[0], eval(args[1]),))

elif cmd == 'RetrieveRelationsCreateByUser':
    if len(args) != 2:
        print('RetrieveRelationsCreateByUser requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationsCreateByUser(args[0], eval(args[1]),))

elif cmd == 'RetrieveRelationsCreatedByNiHA':
    if len(args) != 1:
        print('RetrieveRelationsCreatedByNiHA requires 1 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationsCreatedByNiHA(eval(args[0]),))

elif cmd == 'RetrieveRelationsCreatedByNiHAWithUser':
    if len(args) != 2:
        print('RetrieveRelationsCreatedByNiHAWithUser requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationsCreatedByNiHAWithUser(args[0], eval(args[1]),))

elif cmd == 'RetrieveRelationsCreatedByNiHAWithCriteria':
    if len(args) != 2:
        print('RetrieveRelationsCreatedByNiHAWithCriteria requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationsCreatedByNiHAWithCriteria(args[0], eval(args[1]),))

elif cmd == 'RetrieveRelationsUniqueListOfAllSpecializationLabels':
    if len(args) != 1:
        print('RetrieveRelationsUniqueListOfAllSpecializationLabels requires 1 args')
        sys.exit(1)
    pp.pprint(client.RetrieveRelationsUniqueListOfAllSpecializationLabels(eval(args[0]),))

elif cmd == 'CreateNodes':
    if len(args) != 1:
        print('CreateNodes requires 1 args')
        sys.exit(1)
    pp.pprint(client.CreateNodes(eval(args[0]),))

elif cmd == 'RetrieveByNeo4jId':
    if len(args) != 1:
        print('RetrieveByNeo4jId requires 1 args')
        sys.exit(1)
    pp.pprint(client.RetrieveByNeo4jId(args[0],))

elif cmd == 'RetrieveNodes':
    if len(args) != 1:
        print('RetrieveNodes requires 1 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodes(args[0],))

elif cmd == 'RetrieveNodesByGraphID':
    if len(args) != 2:
        print('RetrieveNodesByGraphID requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesByGraphID(args[0], eval(args[1]),))

elif cmd == 'RetrieveNodesByAoKID':
    if len(args) != 2:
        print('RetrieveNodesByAoKID requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesByAoKID(args[0], eval(args[1]),))

elif cmd == 'RetrieveNodesByAllSubjectSpecializationOf':
    if len(args) != 2:
        print('RetrieveNodesByAllSubjectSpecializationOf requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesByAllSubjectSpecializationOf(args[0], eval(args[1]),))

elif cmd == 'RetrieveNodesByAnySubjectSpecializationOf':
    if len(args) != 2:
        print('RetrieveNodesByAnySubjectSpecializationOf requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesByAnySubjectSpecializationOf(args[0], eval(args[1]),))

elif cmd == 'RetrieveNodesByAnyNameLabels':
    if len(args) != 2:
        print('RetrieveNodesByAnyNameLabels requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesByAnyNameLabels(args[0], eval(args[1]),))

elif cmd == 'RetrieveNodesByAllNameLabels':
    if len(args) != 2:
        print('RetrieveNodesByAllNameLabels requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesByAllNameLabels(args[0], eval(args[1]),))

elif cmd == 'RetrieveNodesTruthValue':
    if len(args) != 2:
        print('RetrieveNodesTruthValue requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesTruthValue(args[0], eval(args[1]),))

elif cmd == 'RetrieveNodesByEvaluation':
    if len(args) != 2:
        print('RetrieveNodesByEvaluation requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesByEvaluation(args[0], eval(args[1]),))

elif cmd == 'RetrieveNodesByDateTime':
    if len(args) != 2:
        print('RetrieveNodesByDateTime requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesByDateTime(args[0], eval(args[1]),))

elif cmd == 'RetrieveNodesByAge':
    if len(args) != 2:
        print('RetrieveNodesByAge requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesByAge(args[0], eval(args[1]),))

elif cmd == 'RetrieveNodesAttentionLevel':
    if len(args) != 2:
        print('RetrieveNodesAttentionLevel requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesAttentionLevel(args[0], eval(args[1]),))

elif cmd == 'RetrieveNodesByScratchPad':
    if len(args) != 2:
        print('RetrieveNodesByScratchPad requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesByScratchPad(args[0], eval(args[1]),))

elif cmd == 'RetrieveNodesByUser':
    if len(args) != 2:
        print('RetrieveNodesByUser requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesByUser(args[0], eval(args[1]),))

elif cmd == 'RetrieveNodesCreateByUser':
    if len(args) != 2:
        print('RetrieveNodesCreateByUser requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesCreateByUser(args[0], eval(args[1]),))

elif cmd == 'RetrieveNodesCreatedByNiHA':
    if len(args) != 1:
        print('RetrieveNodesCreatedByNiHA requires 1 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesCreatedByNiHA(eval(args[0]),))

elif cmd == 'RetrieveNodesCreatedByNiHAWithUser':
    if len(args) != 2:
        print('RetrieveNodesCreatedByNiHAWithUser requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesCreatedByNiHAWithUser(args[0], eval(args[1]),))

elif cmd == 'RetrieveNodesCreatedByNiHAWithCriteria':
    if len(args) != 2:
        print('RetrieveNodesCreatedByNiHAWithCriteria requires 2 args')
        sys.exit(1)
    pp.pprint(client.RetrieveNodesCreatedByNiHAWithCriteria(args[0], eval(args[1]),))

elif cmd == 'RetriveNodesUniqueListOfAllSpecializationLabels':
    if len(args) != 1:
        print('RetriveNodesUniqueListOfAllSpecializationLabels requires 1 args')
        sys.exit(1)
    pp.pprint(client.RetriveNodesUniqueListOfAllSpecializationLabels(eval(args[0]),))

elif cmd == 'UpdateNode':
    if len(args) != 1:
        print('UpdateNode requires 1 args')
        sys.exit(1)
    pp.pprint(client.UpdateNode(eval(args[0]),))

elif cmd == 'DeleteNode':
    if len(args) != 1:
        print('DeleteNode requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteNode(args[0],))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
